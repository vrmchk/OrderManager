@model OrderViewModel

@{
    ViewData["Title"] = "Orders";
    var orderDetails = Model.OrderDetails.ToList();
    List<ProductViewModel> products = ViewBag.Products ?? new List<ProductViewModel>();
}

<div class="row justify-content-center mb-3">
    <div class="col col-lg">
        <div class="card">
            <div class="card-header">
                <h5>Order</h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <p class="card-text">@($"{nameof(Model.Id)}: {Model.Id}")</p>
                    <p class="card-text">@($"{nameof(Model.OrderDate)}: {Model.OrderDate}")</p>
                    <p class="card-text">@($"{nameof(Model.RequiredDate)}: {Model.RequiredDate}")</p>
                    <p class="card-text">@($"{nameof(Model.ShippedDate)}: {Model.ShippedDate}")</p>
                    <p class="card-text">@($"{nameof(Model.Freight)}: {Model.Freight}")</p>
                    <p class="card-text">@($"{nameof(Model.ShipName)}: {Model.ShipName}")</p>
                    <p class="card-text">@($"{nameof(Model.ShipAddress)}: {Model.ShipAddress}")</p>
                    <p class="card-text">@($"{nameof(Model.ShipCity)}: {Model.ShipCity}")</p>
                    <p class="card-text">@($"{nameof(Model.ShipRegion)}: {Model.ShipRegion}")</p>
                    <p class="card-text">@($"{nameof(Model.ShipPostalCode)}: {Model.ShipPostalCode}")</p>
                    <p class="card-text">@($"{nameof(Model.ShipCountry)}: {Model.ShipCountry}")</p>
                    @if (Model.Employee != null)
                    {
                        <h5 class="card-title">Employee:</h5>
                        @* <div style="display: flex; justify-content: space-around"> *@
                            @* <div class="col" style="text-align: right">@nameof(Model.Employee.Id)</div> *@
                            @* <div class="col" style="text-align: center; width: auto">:</div> *@
                            @* <div class="col" style="text-align: left">@Model.Employee.Id</div> *@
                        // </div>
                        <p class="card-text">@($"{nameof(Model.Employee.Id)}: {Model.Employee.Id}")</p>
                        <p class="card-text">@($"{nameof(Model.Employee.FirstName)}: {Model.Employee.FirstName}")</p>
                        <p class="card-text">@($"{nameof(Model.Employee.LastName)}: {Model.Employee.LastName}")</p>
                    }
                    @if (Model.Customer != null)
                    {
                        <h5 class="card-title">Customer:</h5>
                        <p class="card-text">@($"{nameof(Model.Customer.Id)}: {Model.Customer.Id}")</p>
                        <p class="card-text">@($"{nameof(Model.Customer.CompanyName)}: {Model.Customer.CompanyName}")</p>
                        <p class="card-text">@($"{nameof(Model.Customer.ContactName)}: {Model.Customer.ContactName}")</p>
                        <p class="card-text">@($"{nameof(Model.Customer.Phone)}: {Model.Customer.Phone}")</p>
                    }
                    @if (Model.Shipper != null)
                    {
                        <h5 class="card-title">Shipper:</h5>
                        <p class="card-text">@($"{nameof(Model.Shipper.Id)}: {Model.Shipper.Id}")</p>
                        <p class="card-text">@($"{nameof(Model.Shipper.CompanyName)}: {Model.Shipper.CompanyName}")</p>
                        <p class="card-text">@($"{nameof(Model.Shipper.Phone)}: {Model.Shipper.Phone}")</p>
                    }

                    <h5 class="card-title">OrderDetails:</h5>
                    <table class="table table-striped">
                        <thead>
                        <tr>
                            @{
                                var d = new OrderDetailViewModel();
                            }
                            <th>@Html.DisplayNameFor(_ => d.ProductId)</th>
                            <th>@Html.DisplayNameFor(_ => d.UnitPrice)</th>
                            <th>@Html.DisplayNameFor(_ => d.Discount)</th>
                            <th>@Html.DisplayNameFor(_ => d.Quantity)</th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var detail in orderDetails)
                        {
                            <tr>
                                <td>@Html.DisplayFor(_ => detail.ProductId)</td>
                                <td>@Html.DisplayFor(_ => detail.UnitPrice)</td>
                                <td>@Html.DisplayFor(_ => detail.Discount)</td>
                                <td>@Html.DisplayFor(_ => detail.Quantity)</td>
                            </tr>
                        }
                        </tbody>
                    </table>

                    <h5 class="card-title">Products:</h5>
                    <table class="table table-striped">
                        <thead>
                        <tr>
                            @{
                                var p = new ProductViewModel();
                            }
                            <th>@Html.DisplayNameFor(_ => p.Id)</th>
                            <th>@Html.DisplayNameFor(_ => p.ProductName)</th>
                            <th>@Html.DisplayNameFor(_ => p.CategoryId)</th>
                            <th>@Html.DisplayNameFor(_ => p.SupplierId)</th>
                            <th>@Html.DisplayNameFor(_ => p.UnitsInStock)</th>
                            <th>@Html.DisplayNameFor(_ => p.UnitsOnOrder)</th>
                            <th>@Html.DisplayNameFor(_ => p.ReorderLevel)</th>
                            <th>@Html.DisplayNameFor(_ => p.Discontinued)</th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var product in products)
                        {
                            <tr>
                                <td>@Html.DisplayFor(_ => product.Id)</td>
                                <td>@Html.DisplayFor(_ => product.ProductName)</td>
                                <td>@Html.DisplayFor(_ => product.CategoryId)</td>
                                <td>@Html.DisplayFor(_ => product.SupplierId)</td>
                                <td>@Html.DisplayFor(_ => product.UnitsInStock)</td>
                                <td>@Html.DisplayFor(_ => product.UnitsOnOrder)</td>
                                <td>@Html.DisplayFor(_ => product.ReorderLevel)</td>
                                <td>@Html.DisplayFor(_ => product.Discontinued)</td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="card-footer"></div>

    </div>
</div>